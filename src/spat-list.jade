spat-list
  #{'yield'}

  style(scoped, type='less').
    :scope {
      display: block;
      overflow: scroll;
      -webkit-overflow-scrolling: touch;
      overflow-scrolling: touch;
      height: 100%;
    }
  script.
    var self = this;

    this.on('mount', function() {
      this.init();
      this.root.addEventListener('scroll', function(e) {
        var max = e.target.scrollHeight - e.target.offsetHeight-1;
        if (e.target.scrollTop >= max) {
          self.load();
        }
      }, false);
    });

    this.init = function() {
      this.items = [];
      this.page = 1;
      this.isLock = false;
      this.isMore = true;
      return this;
    };

    this.load = function() {
      // ロック中は何もしない
      if (this.isLock) return;

      // ロック
      this.lock();

      // 追加ロード
      if (this.opts.onload) {
        this.opts.onload(this.page++, this);
      }
      return this;
    };

    this.addItem = function(item) {
      this.items.push(item);
      this.update();
      return this;
    };

    this.addItems = function(items) {
      Array.prototype.push.apply(self.items, items);
      this.update();
      return this;
    };

    this.lock = function() {
      this.isLock = true;
      this.update();
      return this;
    };
    this.unlock = function() {
      this.isLock = false;
      this.update()
      return this;
    };

    this.more = function(flag) {
      this.isMore = flag;
      this.update();
      return this;
    };
